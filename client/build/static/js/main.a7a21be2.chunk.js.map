{"version":3,"sources":["Components/BigSearchBar/BigSearchBar.js","Components/Main/Main.js","Components/Restaurant/Restaurant.js","Components/RestaurantList/RestaurantList.js","util/Yelp.js","util/MapQuest.js","Components/SmallSearchBar/SmallSearchBar.js","Components/SearchResults/SearchResults.js","Components/ReviewForm/ReviewForm.js","Components/Review/Review.js","Components/ReviewPage/ReviewPage.js","Components/SidePages/About.js","Components/SidePages/Contact.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["BigSearchBar","props","localStorage","getItem","state","term","location","initialLocation","handleTermChange","bind","handleLocationChange","handleSearch","e","this","setState","target","value","preventDefault","history","push","onSubmit","className","placeholder","onChange","type","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","long","longitude","fetch","then","handleErrors","jsonResponse","city","results","locations","adminArea5","adminArea3","country","adminArea1","setItem","catch","error","console","log","React","Component","response","ok","Error","statusText","json","withRouter","Main","users","to","style","textDecoration","Restaurant","handleClick","str","JSON","stringify","restaurant","window","open","id","hasClick","src","imageUrl","alt","onClick","name","category","address1","zipCode","rating","reviewCount","RestaurantList","restaurants","length","slice","map","key","apiKey","Yelp","search","headers","Authorization","businesses","business","phone","url","image_url","zip_code","address","categories","title","review_count","searchById","SmallSearchBar","initial","queryString","urlParams","URLSearchParams","has","get","reload","SearchResults","isLoading","searchYelp","ReviewForm","dish_name","dish_rating","dish_description","dish_img_path","user","errors","handleNameChange","handleUserChange","handleRatingChange","handleDescriptionChange","handleSubmit","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","body","review_id","restaurant_id","restaurantId","user_id","review_date","method","res","status","err","Review","review","ReviewPage","parse","reviews","removeItem","rev","reverse","About","Contact","href","App","path","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a7a21be2.chunk.js","sourcesContent":["import React from 'react';\nimport './BigSearchBar.css';\nimport { withRouter } from 'react-router-dom';\n\nconst apiKey = 'u5mrF79LEqZx7JFwOyifoKT2a3ILGvRE';\n\nclass BigSearchBar extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tlet initial = '';\n\t\tif(localStorage.getItem('initialLocation')) {\n\t\t\tinitial = localStorage.getItem('initialLocation');\n\t\t}\n\t\tthis.state = {\n\t\t\tterm: '',\n\t\t\tlocation: '',\n\t\t\tinitialLocation: ''\n\t\t};\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\n\t\tthis.handleSearch = this.handleSearch.bind(this);\n    }\n    handleTermChange(e) {\n\tthis.setState({term: e.target.value});\n    }\n    handleLocationChange(e) {\n\tthis.setState({location: e.target.value});\n\t}\n\thandleSearch(e) {\n\t\te.preventDefault();\n\t\tif(this.state.location === '') {\n\t\t\tthis.setState({location: this.state.initialLocation});\n\t\t\tthis.props.history.push(`/search?term=${this.state.term}&location=${this.state.initialLocation}`);\n\t\t} else {\n\t\t\tthis.props.history.push(`/search?term=${this.state.term}&location=${this.state.location}`); //redirect url\n\t\t}\n\t}\n    render() {\n\treturn (\n\t\t<div >\n\t\t\t<form onSubmit = {this.handleSearch}>\n\t\t\t\t<div className = \"BigSearchBar-fields\">\n\t\t\t\t\t<input placeholder = \"Search by business\" onChange = {this.handleTermChange}/>\n\t\t\t\t\t<input placeholder = \"Enter location\"  onChange = {this.handleLocationChange}/>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"BigSearchBar-submit\">\n\t\t\t\t\t<input type = 'submit' value = 'Search'/>\n\t\t\t\t</div>\n\t\t\t</form>\n\t    </div>\n\t);\n\t}\n\t\n\tasync componentDidMount() { //fetch location from mapquest api\n\t\tif(navigator.geolocation) {\n\t\t\ttry {\n\t\t\t\tawait navigator.geolocation.getCurrentPosition((pos) => {\n\t\t\t\t\tconst lat = pos.coords.latitude;\n\t\t\t\t\tconst long = pos.coords.longitude;\n\t\t\t\t\treturn fetch(`https://www.mapquestapi.com/geocoding/v1/reverse?key=${apiKey}&location=${lat}%2C${long}&outFormat=json&thumbMaps=false`)\n\t\t\t\t\t.then(handleErrors)\n\t\t\t\t\t.then(jsonResponse => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst city = jsonResponse.results[0].locations[0].adminArea5;\n\t\t\t\t\t\tconst state = jsonResponse.results[0].locations[0].adminArea3;\n\t\t\t\t\t\tconst country = jsonResponse.results[0].locations[0].adminArea1;\n\t\t\t\t\t\treturn `${city}, ${state}, ${country}`;\n\t\t\t\t\t})\n\t\t\t\t\t.then(location => {\n\t\t\t\t\t\tthis.setState({location: location, initialLocation: location});\n\t\t\t\t\t\tlocalStorage.setItem('initialLocation', location);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t});\n\t\t\t\t});\t\n\t\t\t} catch (error){\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response.json();\n}\n\n\nexport default withRouter(BigSearchBar);\n","import React from 'react';\nimport './Main.css';\nimport BigSearchBar from '../BigSearchBar/BigSearchBar';\nimport {Link} from 'react-router-dom';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: []\n        };\n    }\n    render() {\n        return (\n            <div className=\"Main\">\n                <div className = \"text-container\">\n                <Link className = \"text\" to = '/' style={{ textDecoration: 'none' }}>\n                    <h1> dish </h1>\n                    \n                </Link>\n                </div>\n                <BigSearchBar/>\n                \n            </div>\n        );\n    }\n    \n}\n\nexport default Main;\n","import React from 'react';\nimport './Restaurant.css';\n\nclass Restaurant extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick(e) {\n\t\tlet str = JSON.stringify(this.props.restaurant);\n\t\tlocalStorage.setItem(\"new-tab-data\", str);\n\t\twindow.open(`/restaurant?id=${this.props.restaurant.id}`,\"_blank\"); //open review page in new tab\n\t}\n\trender() {\n\t\t\n\t\treturn (\n\t\t\t<div className=\"Restaurant\" >\n\t\t\t\t\n\t\t\t\t\t<div className=\"image-container\">\n\t\t\t\t\t\t{this.props.hasClick ? \n\t\t\t\t\t\t<img src={this.props.restaurant.imageUrl} alt='' onClick = {this.handleClick} className = \"clickable-img\"/>\n\t\t\t\t\t\t:<img src={this.props.restaurant.imageUrl} alt=''/>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"Info-text\">\n\t\t\t\t\t\t<div className=\"Restaurant-name\"  >\t\n\t\t\t\t\t\t\t{this.props.hasClick ?\t\n\t\t\t\t\t\t\t<h1 onClick = {this.handleClick} className = \"clickable-h1\"> {this.props.restaurant.name}</h1>\n\t\t\t\t\t\t\t: <h1> {this.props.restaurant.name}</h1>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"Restaurant-info\">\n\t\t\t\t\t\t\t<h4> {this.props.restaurant.category}</h4>\n\t\t\t\t\t\t\t<h3> {this.props.restaurant.address1}</h3>\n\t\t\t\t\t\t\t<h3> {this.props.restaurant.city}, {this.props.restaurant.state}, {this.props.restaurant.zipCode}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"Review-info\" >\n\t\t\t\t\t\t\t<h3> Average Yelp rating: {this.props.restaurant.rating} </h3>\n\t\t\t\t\t\t\t<h3> {this.props.restaurant.reviewCount}  reviews made</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Restaurant;\n","import React from 'react';\nimport './RestaurantList.css';\nimport Restaurant from '../Restaurant/Restaurant';\n\nclass RestaurantList extends React.Component {\n    render() {\n\t\treturn (\n\t\t\t<div className = \"Restaurant-List\">\n\t\t\t\t{this.props.restaurants.length > 0 ? \n\t\t\t\tthis.props.restaurants.slice(0,20).map(restaurant => {\n\t\t\t\treturn <div><Restaurant restaurant = {restaurant} key = {restaurant.id} hasClick = {true}/></div>;\n\t\t\t\t})\n\t\t\t\t:\n\t\t\t\t<h1> No restaurants found. </h1>}\n\t\t\t</div>\n\t\t);\n    }\n}\n\nexport default RestaurantList;\n","const apiKey = 'iQ8pmLEK2Wg8SRHRxvyuCf64FT9gNDJgVZruzws5XGLHpNl3X3reTymr9964LJQR1MqsX8JY0katxpNhDi2gJsPRtq7WEoJvYg2VFd-yYd7jsHFg2XuUAW-PnZrFXnYx'; //enter your own yelp api key\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response.json();\n}\n\nconst Yelp = {\n    search(term, location) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}`\n        , {headers: {Authorization: `Bearer ${apiKey}`}})\n        .then(handleErrors)\n        .then(jsonResponse => {\n            if(jsonResponse.businesses) {\n                return jsonResponse.businesses.map(business => (\n                    {id: business.id,\n                        phone: business.phone,\n                        name: business.name,\n                        url: business.url,\n                        imageUrl: business.image_url,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        country: business.location.country,\n                        address: business.location.address1,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                    }));\n                } else {\n                return [];\n            }\n        }).catch(error => {\n            console.log(error);\n            return [];\n        });\n\n    },\n\n    searchById(id) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}`\n        , {headers: {Authorization: `Bearer ${apiKey}`}})\n        .then(handleErrors)\n        .then(jsonResponse => {\n\n            return {id: jsonResponse.id,\n                    phone: jsonResponse.phone,\n                    name: jsonResponse.name,\n                    url: jsonResponse.url,\n                    imageUrl: jsonResponse.image_url,\n                    city: jsonResponse.location.city,\n                    state: jsonResponse.location.state,\n                    zipCode: jsonResponse.location.zip_code,\n                    country: jsonResponse.location.country,\n                    address: jsonResponse.location.address1,\n                    category: jsonResponse.categories[0].title,\n                    rating: jsonResponse.rating,\n                    reviewCount: jsonResponse.review_count};\n            } \n        ).catch(error => {\n            console.log(error);\n            return [];\n        });\n    }\n\n}\n\nexport default Yelp;\n","const apiKey = 'u5mrF79LEqZx7JFwOyifoKT2a3ILGvRE'; //enter your own mapquest api key\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response.json();\n}\n\nconst MapQuest = {\n    reverse(pos) { //returns name of city given latitude & longitude\n        \n        const lat = pos.coords.latitude;\n        const long = pos.coords.longitude;\n        return fetch(`https://www.mapquestapi.com/geocoding/v1/reverse?key=${apiKey}&location=${lat}%2C${long}&outFormat=json&thumbMaps=false`)\n        .then(handleErrors)\n        .then(jsonResponse => {\n            const city = jsonResponse.results[0].locations[0].adminArea5;\n            const state = jsonResponse.results[0].locations[0].adminArea3;\n            const country = jsonResponse.results[0].locations[0].adminArea1;\n            console.log(`${city}, ${state}, ${country}`);\n            return `${city}, ${state}, ${country}`;\n        })\n        .catch(error => {\n            console.log(error);\n            return {};\n        });\n    }\n}\n\nexport default MapQuest;\n","import React from 'react';\nimport './SmallSearchBar.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport MapQuest from '../../util/MapQuest';\n\nconst apiKey = 'u5mrF79LEqZx7JFwOyifoKT2a3ILGvRE';\n\nclass SmallSearchBar extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tlet initial = '';\n\t\tif(localStorage.getItem('initialLocation')) {\n\t\t\tinitial = localStorage.getItem('initialLocation');\n\t\t}\n\t\tlet queryString = window.location.search;\n\t\tlet urlParams = new URLSearchParams(queryString);\n\t\tlet term = '';\n\t\tif(urlParams.has('term')) {\n\t\t\tterm = urlParams.get('term');\n\t\t}\n\t\tlet location = '';\n\t\tif(urlParams.has('location')) {\n\t\t\tlocation = urlParams.get('location');\n\t\t}\n\t\tthis.state = {\n\t\t\tterm: term,\n\t\t\tinitialLocation: initial,\n\t\t\tlocation: location\n\t\t};\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\n\t\tthis.handleSearch = this.handleSearch.bind(this);\n\t}\n\n    handleTermChange(e) {\n\t\tthis.setState({term: e.target.value});\n    }\n    handleLocationChange(e) {\n\t\tthis.setState({location: e.target.value});\n\t}\n\thandleSearch(e) {\n\t\te.preventDefault();\n\t\tif(this.state.location === '') {\n\t\t\tthis.setState({location: this.state.initialLocation});\n\t\t\tthis.props.history.push(`/search?term=${this.state.term}&location=${this.state.initialLocation}`);\n\t\t} else {\n\t\t\tthis.props.history.push(`/search?term=${this.state.term}&location=${this.state.location}`); //redirect url\n\t\t}\n\t\twindow.location.reload(false);\n\t}\n    render() {\n\t\treturn (\n\t\t\t<div className = \"SmallSearchBar-container\">\n\t\t\t\t<Link className = \"logo-container\" to = '/' style={{ textDecoration: 'none' }}>\n\t\t\t\t\t<div className = \"logo-text\">\n\t\t\t\t\t\t<h3 id=\"logo\"> d i s h </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t\t<form className = \"searchForm\" onSubmit = {this.handleSearch}>\n\t\t\t\t\t<div >\n\t\t\t\t\t\t<input className = \"SmallSearchBar-fields\" placeholder = \"Search by business\" value = {this.state.term} onChange = {this.handleTermChange}/>\n\t\t\t\t\t\t<input className = \"SmallSearchBar-fields\" placeholder = \"Enter location\" value = {this.state.location} onChange = {this.handleLocationChange} />\n\t\t\t\t\t\t<input className = \"SmallSearchBar-submit\" type = 'submit' value = 'Search'/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\t\n\n}\n\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response.json();\n}\n\n\n\nexport default withRouter(SmallSearchBar);\n","import React from 'react';\nimport './SearchResults.css';\nimport RestaurantList from '../RestaurantList/RestaurantList';\nimport Yelp from '../../util/Yelp';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\n\nconst temporaryRestaurant = \n    {\n    id: 'temporary',\n    imageUrl: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\n    name: 'Restaurant Name',\n    address1: 'Restaurant St Address',\n    city: 'Restaurant City',\n    state: 'Restaurant State',\n    zipCode: 'Restaurant Zip Code',\n    category: 'Restaurant Category',\n    rating: 5.0,\n    reviewCount: 100};\n\n    let queryString = window.location.search;\n        let urlParams = new URLSearchParams(queryString);\n        let term = urlParams.get('term');\n        let location = urlParams.get('location');\n\n\nclass SearchResults extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n\n        this.state = {\n            restaurants: [],\n            isLoading: false\n        };\n        this.searchYelp = this.searchYelp.bind(this);\n    }\n\n    searchYelp(term, location) {\n        Yelp.search(term, location).then(restaurants => {\n            this.setState({restaurants: restaurants});\n        });\n    }\n    render() {\n        return (\n            <div className = \"Search-results\">\n                <SmallSearchBar/>\n                \n                <div className = \"content\">\n                    {!this.state.isLoading ? \n                    <div>\n                        <h1 id = \"Header\"> Top results in {location}:</h1>\n                        <RestaurantList restaurants = {this.state.restaurants}/></div>\n                        : <h1> Loading... </h1>}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n        Yelp.search(term, location).then(restaurants => {\n            this.setState({restaurants: restaurants, isLoading: false});\n        });\n        /*\n        cancelablePromise.then(restaurants => {\n            this.setState({restaurants: restaurants, isLoading: false});\n        });\n        */\n    }\n    componentWillUnmount() {\n        /*\n        cancelablePromise.cancel();\n        */\n    }\n}\n\n\n/*\nconst makeCancelable = (promise) => {\n    let hasCanceled_ = false;\n\n    const wrappedPromise = new Promise((resolve, reject) => {\n        promise.then(\n            val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n            error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n        );\n    });\n\n    return {\n        promise: wrappedPromise,\n        cancel() {\n            hasCanceled_ = true;\n        },\n    };\n};\n\nlet queryString = window.location.search;\nlet urlParams = new URLSearchParams(queryString);\nlet term = urlParams.get('term');\nlet location = urlParams.get('location');\n\nconst cancelablePromise = makeCancelable(Yelp.search(term, location));\n*/\nexport default SearchResults;","import React from 'react';\nimport './ReviewForm.css';\n\nclass ReviewForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dish_name: '',\n            dish_rating: '',\n            dish_description: '',\n            dish_img_path: '',\n            user: '',\n            errors: false\n        }\n        this.handleNameChange=this.handleNameChange.bind(this);\n        this.handleUserChange=this.handleUserChange.bind(this);\n        this.handleRatingChange=this.handleRatingChange.bind(this);\n        this.handleDescriptionChange=this.handleDescriptionChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleNameChange(e) {\n        this.setState({dish_name: e.target.value});\n    }\n    handleRatingChange(e) {\n        this.setState({dish_rating: e.target.value});\n    }\n    handleDescriptionChange(e) {\n        this.setState({dish_description: e.target.value});\n    }\n    handleUserChange(e) {\n        this.setState({user: e.target.value});\n    }\n    handleSubmit(e) { //send a POST request to /review (add it to the database)\n        this.setState({errors: false});\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n        today = yyyy + '-' + mm + '-' + dd;\n\n        const body = {\n            review_id: 0,\n            restaurant_id: this.props.restaurantId,\n            user_id: this.state.user,\n            review_date: today,\n            dish_name: this.state.dish_name,\n            dish_rating: this.state.dish_rating,\n            dish_description: this.state.dish_description,\n            dish_img_path: this.state.dish_img_path\n        };\n        \n        \n        fetch('/review', {\n            method: \"post\",\n            body: JSON.stringify(body),\n            headers: { \"Content-Type\": \"application/json\" }\n        }).then(res => {\n            if(res.status != 200) {\n                this.setState({errors: true});\n            }\n            return res.json();\n\n        }).then( json => {\n                if(!this.state.errors) {\n                    window.location.reload(false);\n                }\n            }\n        ) \n        .catch(err => {\n            console.log(err);\n        });\n        e.preventDefault();\n    }\n    render() {\n        return (    \n            <div className = \"Review-Form\">\n                <h1>Review a dish!</h1>\n                <form onSubmit = {this.handleSubmit}>\n                    <div>\n                        <input id = \"name\" placeholder = \"Name of dish\" onChange = {this.handleNameChange}/>\n                        <input id = \"user\" placeholder = \"Your name\" onChange = {this.handleUserChange}/>\n                        <input id = \"rating\" placeholder = \"Rating (out of 5)\" onChange = {this.handleRatingChange}/>\n                        <textarea id = \"description\" placeholder = \"How was it?\" onChange = {this.handleDescriptionChange}/>\n                    </div>\n                    <div>\n                        <input id = \"submit\" type = 'submit' value = 'Post'/>\n                        {this.state.errors && <h4>Error in submitting form</h4>}\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default ReviewForm;","import React from 'react';\nimport './Review.css';\n/*\nNEEDS:\n\ndish name\ndish rating\ndish description\ndate\n(photo)\n(user and user info)\n(upvotes and downvotes)\n*/\n\n\nclass Review extends React.Component {\n    render() {\n        return (\n            <div className = \"Review\">\n                <h1>{this.props.review.dish_name}: {this.props.review.dish_rating}</h1>\n                <h3>{this.props.review.dish_description}</h3>\n                <h4>{this.props.review.user_id}, {this.props.review.review_date.slice(0,10)}</h4>\n            </div>\n        );\n    }\n}\n\nexport default Review;","import React from 'react';\nimport Restaurant from '../Restaurant/Restaurant';\nimport './ReviewPage.css';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nimport Yelp from '../../util/Yelp';\nimport ReviewForm from '../ReviewForm/ReviewForm';\nimport Review from '../Review/Review';  \n\nlet queryString = window.location.search;\nlet urlParams = new URLSearchParams(queryString);\nlet id = urlParams.get('id');\n\nclass ReviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n        let str = localStorage.getItem(\"new-tab-data\");\n        if(str) {\n            console.log('foundin local storage');\n            let res = JSON.parse(str);\n            this.state = {\n                restaurant: res,\n                isLoading: false,\n                reviews: []\n            }\n            localStorage.removeItem(\"new-tab-data\");\n        } else {\n            this.state = {\n                restaurant: '',\n                isLoading: false,\n                reviews: []\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className = \"Review-page\">\n                \n                <SmallSearchBar/>\n                <div className = \"row\">\n                    <div className = \"Form-display\"><ReviewForm restaurantId = {id}/></div>\n                    <div className = \"Restaurant-display\">\n                        \n                        {this.state.isLoading ? <h1> Loading... </h1> : \n                            <Restaurant restaurant = {this.state.restaurant} hasClick = {false}/>\n                        }\n                        \n                    </div>\n                    \n                </div>\n                {this.state.reviews.length ? this.state.reviews.map(rev => {\n                    return <Review review = {rev} key = {rev.review_id}/>\n                }) : <h1 id = \"none\">Be the first to review a dish!</h1>\n                }\n                \n            </div>\n        );\n    }\n/*\n                {this.state.reviews && this.state.reviews.map(rev => {\n                    return <Review review = {rev} key = {rev.id}/>\n                })}\n                */\n    componentDidMount() {\n        if(this.state.restaurant === '') {\n            this.setState({isLoading: true});\n            Yelp.searchById(id).then(restaurants => {\n                this.setState({restaurant: restaurants, isLoading: false});\n            });\n        }\n\n        fetch(`/review/restaurantId/${id}`)\n        .then(res => {\n            return res.json()\n            })\n        .then(reviews => { \n            this.setState({reviews: reviews.reverse()});\n        })\n        .catch(error => console.log(error));\n    }\n}\n\n\nexport default ReviewPage;","import React from 'react';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nimport './About.css'\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div className = \"SidePage\">\n                <SmallSearchBar />\n                <div className = \"container\">\n                    <div className = \"box\">\n                    <p>A website to review dishes from restaurants. See what to order at your next outing!</p>\n                    <p> Website made by Daniel Liu, undergraduate Yale 2023. \n                    App utilizes Yelp API and MapQuest API.</p>\n                    <p> Please see the contact page for questions/suggestions. </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nimport './About.css'\n\nclass Contact extends React.Component {\n    render() {\n        return (\n            <div className = \"SidePage\">\n                <SmallSearchBar />\n                <div className = \"container\">\n                    <div className = \"box\">\n                    <p> You can reach me through: </p>\n                    <ul>\n                        <li>dclliu@gmail.com</li>\n                        <li><a href = \"https://www.linkedin.com/in/dclliu\" target = \"_blank\" >LinkedIn</a></li>\n                        \n                    </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport Main from '../Main/Main';\nimport SearchResults from '../SearchResults/SearchResults';\nimport ReviewPage from '../ReviewPage/ReviewPage';\nimport About from '../SidePages/About';\nimport Contact from '../SidePages/Contact';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams\n  } from \"react-router-dom\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            \n            <Router>\n                \n                <Switch>\n                    <Route path = '/about'><About/></Route>\n                    <Route path = '/contact'><Contact/></Route>\n                    <Route path = '/search'><SearchResults /></Route>\n                    <Route path = '/restaurant'><ReviewPage /></Route>\n                    <Route exact path = '/'> <Main/> </Route>\n                    \n                </Switch>\n                <div className = \"footer\">\n                    <h4>2020 Daniel Liu</h4>\n                    <div className = \"links\">\n                    <ul>\n                        <li><Link to = 'about'> About </Link></li>\n                        <li><Link to = 'contact'>Contact</Link></li>\n                    </ul>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}