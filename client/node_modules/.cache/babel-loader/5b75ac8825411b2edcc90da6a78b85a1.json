{"ast":null,"code":"var _jsxFileName = \"/Users/danielliu/Documents/ReactProjects/food-reviewer/src/Components/SearchResults/SearchResults.js\";\nimport React from 'react';\nimport './SearchResults.css';\nimport RestaurantList from '../RestaurantList/RestaurantList';\nimport Yelp from '../../util/Yelp';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nconst temporaryRestaurant = {\n  id: 'temporary',\n  imageUrl: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\n  name: 'Restaurant Name',\n  address1: 'Restaurant St Address',\n  city: 'Restaurant City',\n  state: 'Restaurant State',\n  zipCode: 'Restaurant Zip Code',\n  category: 'Restaurant Category',\n  rating: 5.0,\n  reviewCount: 100\n};\n\nclass SearchResults extends React.Component {\n  constructor(props) {\n    super(props);\n    let queryString = window.location.search;\n    let urlParams = new URLSearchParams(queryString);\n    let term = urlParams.get('term');\n    let location = urlParams.get('location');\n    this.state = {\n      restaurants: [],\n      isLoading: false\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location) {\n    if (location) {\n      Yelp.search(term, location).then(restaurants => {\n        this.setState({\n          restaurants: restaurants\n        });\n      });\n    }\n    /*else {\n     }\n    */\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Search-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SmallSearchBar, {\n      handleSearch: this.searchYelp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \" search results page !\"), this.state.isLoading ? /*#__PURE__*/React.createElement(RestaurantList, {\n      restaurants: this.state.restaurants,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    }, \" Loading... \"));\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    let queryString = window.location.search;\n    let urlParams = new URLSearchParams(queryString);\n    let term = urlParams.get('term');\n    let location = urlParams.get('location');\n    this.setState({\n      restaurants: this.searchYelp(term, location),\n      isLoading: false\n    });\n  }\n\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["/Users/danielliu/Documents/ReactProjects/food-reviewer/src/Components/SearchResults/SearchResults.js"],"names":["React","RestaurantList","Yelp","SmallSearchBar","temporaryRestaurant","id","imageUrl","name","address1","city","state","zipCode","category","rating","reviewCount","SearchResults","Component","constructor","props","queryString","window","location","search","urlParams","URLSearchParams","term","get","restaurants","isLoading","searchYelp","bind","then","setState","render","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,MAAMC,mBAAmB,GACrB;AACAC,EAAAA,EAAE,EAAE,WADJ;AAEAC,EAAAA,QAAQ,EAAE,+EAFV;AAGAC,EAAAA,IAAI,EAAE,iBAHN;AAIAC,EAAAA,QAAQ,EAAE,uBAJV;AAKAC,EAAAA,IAAI,EAAE,iBALN;AAMAC,EAAAA,KAAK,EAAE,kBANP;AAOAC,EAAAA,OAAO,EAAE,qBAPT;AAQAC,EAAAA,QAAQ,EAAE,qBARV;AASAC,EAAAA,MAAM,EAAE,GATR;AAUAC,EAAAA,WAAW,EAAE;AAVb,CADJ;;AAeA,MAAMC,aAAN,SAA4Bf,KAAK,CAACgB,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAlC;AACA,QAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoBL,WAApB,CAAhB;AACA,QAAIM,IAAI,GAAGF,SAAS,CAACG,GAAV,CAAc,MAAd,CAAX;AACA,QAAIL,QAAQ,GAAGE,SAAS,CAACG,GAAV,CAAc,UAAd,CAAf;AACA,SAAKhB,KAAL,GAAa;AACTiB,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAEH;;AAEDD,EAAAA,UAAU,CAACJ,IAAD,EAAOJ,QAAP,EAAiB;AACvB,QAAGA,QAAH,EAAa;AACTnB,MAAAA,IAAI,CAACoB,MAAL,CAAYG,IAAZ,EAAkBJ,QAAlB,EAA4BU,IAA5B,CAAiCJ,WAAW,IAAI;AAC5C,aAAKK,QAAL,CAAc;AAACL,UAAAA,WAAW,EAAEA;AAAd,SAAd;AACH,OAFD;AAGH;AACD;;;;AAIH;;AACDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAI,KAAKJ,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAIK,KAAKnB,KAAL,CAAWkB,SAAX,gBACG,oBAAC,cAAD;AAAgB,MAAA,WAAW,EAAI,KAAKlB,KAAL,CAAWiB,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANV,CADJ;AAUH;;AACDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,QAAL,CAAc;AAACJ,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACA,QAAIT,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAlC;AACA,QAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoBL,WAApB,CAAhB;AACA,QAAIM,IAAI,GAAGF,SAAS,CAACG,GAAV,CAAc,MAAd,CAAX;AACA,QAAIL,QAAQ,GAAGE,SAAS,CAACG,GAAV,CAAc,UAAd,CAAf;AACA,SAAKM,QAAL,CAAc;AAACL,MAAAA,WAAW,EAAE,KAAKE,UAAL,CAAgBJ,IAAhB,EAAsBJ,QAAtB,CAAd;AAA+CO,MAAAA,SAAS,EAAE;AAA1D,KAAd;AACH;;AA9CuC;;AAmD5C,eAAeb,aAAf","sourcesContent":["import React from 'react';\nimport './SearchResults.css';\nimport RestaurantList from '../RestaurantList/RestaurantList';\nimport Yelp from '../../util/Yelp';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\n\nconst temporaryRestaurant = \n    {\n    id: 'temporary',\n    imageUrl: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\n    name: 'Restaurant Name',\n    address1: 'Restaurant St Address',\n    city: 'Restaurant City',\n    state: 'Restaurant State',\n    zipCode: 'Restaurant Zip Code',\n    category: 'Restaurant Category',\n    rating: 5.0,\n    reviewCount: 100};\n\n\n\nclass SearchResults extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let queryString = window.location.search;\n        let urlParams = new URLSearchParams(queryString);\n        let term = urlParams.get('term');\n        let location = urlParams.get('location');\n        this.state = {\n            restaurants: [],\n            isLoading: false\n        };\n        this.searchYelp = this.searchYelp.bind(this);\n\n    }\n\n    searchYelp(term, location) {\n        if(location) {\n            Yelp.search(term, location).then(restaurants => {\n                this.setState({restaurants: restaurants});\n            });\n        } \n        /*else {\n\n        }\n        */\n    }\n    render() {\n        return (\n            <div className = \"Search-results\">\n                <SmallSearchBar handleSearch = {this.searchYelp} />\n                <h1> search results page !</h1>\n                \n                {this.state.isLoading ? \n                    <RestaurantList restaurants = {this.state.restaurants}/>\n                    : <h1> Loading... </h1>}\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.setState({isLoading: true});\n        let queryString = window.location.search;\n        let urlParams = new URLSearchParams(queryString);\n        let term = urlParams.get('term');\n        let location = urlParams.get('location');\n        this.setState({restaurants: this.searchYelp(term, location), isLoading: false});\n    }\n}\n\n\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}