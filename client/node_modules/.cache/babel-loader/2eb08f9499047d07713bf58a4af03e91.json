{"ast":null,"code":"const apiKey = 'iQ8pmLEK2Wg8SRHRxvyuCf64FT9gNDJgVZruzws5XGLHpNl3X3reTymr9964LJQR1MqsX8JY0katxpNhDi2gJsPRtq7WEoJvYg2VFd-yYd7jsHFg2XuUAW-PnZrFXnYx'; //enter your own yelp api key\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}\n\nconst Yelp = {\n  search(term, location) {\n    console.log(`term is ${term}, location is ${location}`);\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(handleErrors).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n        console.log('yelp search successful');\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          phone: business.phone,\n          name: business.name,\n          url: business.url,\n          imageUrl: business.image_url,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          country: business.location.country,\n          address: business.location.address1,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count\n        }));\n      } else {\n        console.log('unsuccessful');\n        return [];\n      }\n    }).catch(error => {\n      console.log(error);\n      return [];\n    });\n  }\n\n};\nexport default Yelp;","map":{"version":3,"sources":["/Users/danielliu/Documents/ReactProjects/food-reviewer/src/util/Yelp.js"],"names":["apiKey","handleErrors","response","ok","Error","statusText","Yelp","search","term","location","console","log","fetch","headers","Authorization","then","jsonResponse","businesses","map","business","id","phone","name","url","imageUrl","image_url","city","state","zipCode","zip_code","country","address","address1","category","categories","title","rating","reviewCount","review_count","catch","error"],"mappings":"AAAA,MAAMA,MAAM,GAAG,kIAAf,C,CAAmJ;;AAEnJ,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,SAAOH,QAAP;AACH;;AAED,MAAMI,IAAI,GAAG;AACTC,EAAAA,MAAM,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUH,IAAK,iBAAgBC,QAAS,EAArD;AACA,WAAOG,KAAK,CAAE,sFAAqFJ,IAAK,aAAYC,QAAS,EAAjH,EACV;AAACI,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,UAASd,MAAO;AAAjC;AAAV,KADU,CAAL,CAENe,IAFM,CAEDd,YAFC,EAGNc,IAHM,CAGDC,YAAY,IAAI;AAClB,UAAGA,YAAY,CAACC,UAAhB,EAA4B;AACxBP,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,eAAOK,YAAY,CAACC,UAAb,CAAwBC,GAAxB,CAA4BC,QAAQ,KACvC;AAACC,UAAAA,EAAE,EAAED,QAAQ,CAACC,EAAd;AACIC,UAAAA,KAAK,EAAEF,QAAQ,CAACE,KADpB;AAEIC,UAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFnB;AAGIC,UAAAA,GAAG,EAAEJ,QAAQ,CAACI,GAHlB;AAIIC,UAAAA,QAAQ,EAAEL,QAAQ,CAACM,SAJvB;AAKIC,UAAAA,IAAI,EAAEP,QAAQ,CAACV,QAAT,CAAkBiB,IAL5B;AAMIC,UAAAA,KAAK,EAAER,QAAQ,CAACV,QAAT,CAAkBkB,KAN7B;AAOIC,UAAAA,OAAO,EAAET,QAAQ,CAACV,QAAT,CAAkBoB,QAP/B;AAQIC,UAAAA,OAAO,EAAEX,QAAQ,CAACV,QAAT,CAAkBqB,OAR/B;AASIC,UAAAA,OAAO,EAAEZ,QAAQ,CAACV,QAAT,CAAkBuB,QAT/B;AAUIC,UAAAA,QAAQ,EAAEd,QAAQ,CAACe,UAAT,CAAoB,CAApB,EAAuBC,KAVrC;AAWIC,UAAAA,MAAM,EAAEjB,QAAQ,CAACiB,MAXrB;AAYIC,UAAAA,WAAW,EAAElB,QAAQ,CAACmB;AAZ1B,SADuC,CAApC,CAAP;AAgBC,OAlBL,MAkBW;AACP5B,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eAAO,EAAP;AACH;AACJ,KA1BM,EA0BJ4B,KA1BI,CA0BEC,KAAK,IAAI;AACd9B,MAAAA,OAAO,CAACC,GAAR,CAAY6B,KAAZ;AACA,aAAO,EAAP;AACH,KA7BM,CAAP;AA+BH;;AAlCQ,CAAb;AAsCA,eAAelC,IAAf","sourcesContent":["const apiKey = 'iQ8pmLEK2Wg8SRHRxvyuCf64FT9gNDJgVZruzws5XGLHpNl3X3reTymr9964LJQR1MqsX8JY0katxpNhDi2gJsPRtq7WEoJvYg2VFd-yYd7jsHFg2XuUAW-PnZrFXnYx'; //enter your own yelp api key\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n}\n\nconst Yelp = {\n    search(term, location) {\n        console.log(`term is ${term}, location is ${location}`);\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}`\n        , {headers: {Authorization: `Bearer ${apiKey}`}})\n        .then(handleErrors)\n        .then(jsonResponse => {\n            if(jsonResponse.businesses) {\n                console.log('yelp search successful');\n                return jsonResponse.businesses.map(business => (\n                    {id: business.id,\n                        phone: business.phone,\n                        name: business.name,\n                        url: business.url,\n                        imageUrl: business.image_url,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        country: business.location.country,\n                        address: business.location.address1,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                    }));\n                    \n                } else {\n                console.log('unsuccessful');\n                return [];\n            }\n        }).catch(error => {\n            console.log(error);\n            return [];\n        });\n\n    }\n\n}\n\nexport default Yelp;\n"]},"metadata":{},"sourceType":"module"}