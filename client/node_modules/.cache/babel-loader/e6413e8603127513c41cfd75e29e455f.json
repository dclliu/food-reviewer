{"ast":null,"code":"var _jsxFileName = \"/Users/danielliu/Documents/ReactProjects/food-reviewer/src/Components/ReviewPage/ReviewPage.js\";\nimport React from 'react';\nimport Restaurant from '../Restaurant/Restaurant';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nimport Yelp from '../../util/Yelp';\n\nclass ReviewPage extends React.Component {\n  constructor(props) {\n    super(props);\n    let str = localStorage.getItem(\"new-tab-data\");\n\n    if (str) {\n      console.log('foundin local storage');\n      let res = JSON.parse(str);\n      this.state = {\n        restaurant: res,\n        isLoading: false\n      };\n      localStorage.removeItem(\"new-tab-data\");\n    } else {\n      this.state = {\n        restaurant: {},\n        isLoading: false\n      };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SmallSearchBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 41\n      }\n    }, \" Loading... \") : /*#__PURE__*/React.createElement(Restaurant, {\n      restaurant: this.state.restaurant,\n      hasClick: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"collapsible\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"write a review!\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"content!\")));\n  }\n\n  componentDidMount() {\n    if (this.state.restaurant) {\n      this.setState({\n        isLoading: true\n      });\n      let queryString = window.location.search;\n      let urlParams = new URLSearchParams(queryString);\n      let id = urlParams.get('id'); //console.log(id);\n\n      Yelp.searchById(id).then(restaurants => {\n        this.setState({\n          restaurant: restaurants,\n          isLoading: false\n        });\n      });\n    }\n  }\n\n}\n\nexport default ReviewPage;","map":{"version":3,"sources":["/Users/danielliu/Documents/ReactProjects/food-reviewer/src/Components/ReviewPage/ReviewPage.js"],"names":["React","Restaurant","SmallSearchBar","Yelp","ReviewPage","Component","constructor","props","str","localStorage","getItem","console","log","res","JSON","parse","state","restaurant","isLoading","removeItem","render","componentDidMount","setState","queryString","window","location","search","urlParams","URLSearchParams","id","get","searchById","then","restaurants"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAV;;AACA,QAAGF,GAAH,EAAQ;AACJG,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,UAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWP,GAAX,CAAV;AACA,WAAKQ,KAAL,GAAa;AACTC,QAAAA,UAAU,EAAEJ,GADH;AAETK,QAAAA,SAAS,EAAE;AAFF,OAAb;AAIAT,MAAAA,YAAY,CAACU,UAAb,CAAwB,cAAxB;AACH,KARD,MAQO;AACH,WAAKH,KAAL,GAAa;AACTC,QAAAA,UAAU,EAAE,EADH;AAETC,QAAAA,SAAS,EAAE;AAFF,OAAb;AAIH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKJ,KAAL,CAAWE,SAAX,gBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAvB,gBACG,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAI,KAAKF,KAAL,CAAWC,UAArC;AAAiD,MAAA,QAAQ,EAAI,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAwB,MAAA,KAAK,EAAG,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAK,MAAA,KAAK,EAAG,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAPJ,CADJ;AAcH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,QAAG,KAAKL,KAAL,CAAWC,UAAd,EAA0B;AACtB,WAAKK,QAAL,CAAc;AAACJ,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACA,UAAIK,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAlC;AACA,UAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoBL,WAApB,CAAhB;AACA,UAAIM,EAAE,GAAGF,SAAS,CAACG,GAAV,CAAc,IAAd,CAAT,CAJsB,CAKtB;;AACA3B,MAAAA,IAAI,CAAC4B,UAAL,CAAgBF,EAAhB,EAAoBG,IAApB,CAAyBC,WAAW,IAAI;AACpC,aAAKX,QAAL,CAAc;AAACL,UAAAA,UAAU,EAAEgB,WAAb;AAA0Bf,UAAAA,SAAS,EAAE;AAArC,SAAd;AACH,OAFD;AAGH;AACJ;;AAhDoC;;AAoDzC,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport Restaurant from '../Restaurant/Restaurant';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nimport Yelp from '../../util/Yelp';\n\nclass ReviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n        let str = localStorage.getItem(\"new-tab-data\");\n        if(str) {\n            console.log('foundin local storage');\n            let res = JSON.parse(str);\n            this.state = {\n                restaurant: res,\n                isLoading: false\n            }\n            localStorage.removeItem(\"new-tab-data\");\n        } else {\n            this.state = {\n                restaurant: {},\n                isLoading: false\n            }\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <SmallSearchBar/>\n                <div>\n                {this.state.isLoading ? <h1> Loading... </h1> : \n                    <Restaurant restaurant = {this.state.restaurant} hasClick = {false}/>\n                }\n                </div>\n                <div>\n                    <button type = \"button\" class = \"collapsible\">write a review!</button>\n                    <div class = \"content\">content!</div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(this.state.restaurant) {\n            this.setState({isLoading: true});\n            let queryString = window.location.search;\n            let urlParams = new URLSearchParams(queryString);\n            let id = urlParams.get('id');\n            //console.log(id);\n            Yelp.searchById(id).then(restaurants => {\n                this.setState({restaurant: restaurants, isLoading: false});\n            });\n        }\n    }\n}\n\n\nexport default ReviewPage;"]},"metadata":{},"sourceType":"module"}