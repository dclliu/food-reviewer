{"ast":null,"code":"var apiKey='u5mrF79LEqZx7JFwOyifoKT2a3ILGvRE';//enter your own mapquest api key\nfunction handleErrors(response){if(!response.ok){throw Error(response.statusText);}return response.json();}var MapQuest={reverse:function reverse(pos){//returns name of city given latitude & longitude\nvar lat=pos.coords.latitude;var long=pos.coords.longitude;return fetch(\"https://www.mapquestapi.com/geocoding/v1/reverse?key=\".concat(apiKey,\"&location=\").concat(lat,\"%2C\").concat(long,\"&outFormat=json&thumbMaps=false\")).then(handleErrors).then(function(jsonResponse){var city=jsonResponse.results[0].locations[0].adminArea5;var state=jsonResponse.results[0].locations[0].adminArea3;var country=jsonResponse.results[0].locations[0].adminArea1;console.log(\"\".concat(city,\", \").concat(state,\", \").concat(country));return\"\".concat(city,\", \").concat(state,\", \").concat(country);}).catch(function(error){console.log(error);return{};});}};export default MapQuest;","map":{"version":3,"sources":["/Users/danielliu/Documents/ReactProjects/dish/src/util/MapQuest.js"],"names":["apiKey","handleErrors","response","ok","Error","statusText","json","MapQuest","reverse","pos","lat","coords","latitude","long","longitude","fetch","then","jsonResponse","city","results","locations","adminArea5","state","adminArea3","country","adminArea1","console","log","catch","error"],"mappings":"AAAA,GAAMA,CAAAA,MAAM,CAAG,kCAAf,CAAmD;AAEnD,QAASC,CAAAA,YAAT,CAAsBC,QAAtB,CAAgC,CAC5B,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CACd,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CACH,CACD,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACH,CAED,GAAMC,CAAAA,QAAQ,CAAG,CACbC,OADa,kBACLC,GADK,CACA,CAAE;AAEX,GAAMC,CAAAA,GAAG,CAAGD,GAAG,CAACE,MAAJ,CAAWC,QAAvB,CACA,GAAMC,CAAAA,IAAI,CAAGJ,GAAG,CAACE,MAAJ,CAAWG,SAAxB,CACA,MAAOC,CAAAA,KAAK,gEAAyDf,MAAzD,sBAA4EU,GAA5E,eAAqFG,IAArF,oCAAL,CACNG,IADM,CACDf,YADC,EAENe,IAFM,CAED,SAAAC,YAAY,CAAI,CAClB,GAAMC,CAAAA,IAAI,CAAGD,YAAY,CAACE,OAAb,CAAqB,CAArB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqCC,UAAlD,CACA,GAAMC,CAAAA,KAAK,CAAGL,YAAY,CAACE,OAAb,CAAqB,CAArB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqCG,UAAnD,CACA,GAAMC,CAAAA,OAAO,CAAGP,YAAY,CAACE,OAAb,CAAqB,CAArB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqCK,UAArD,CACAC,OAAO,CAACC,GAAR,WAAeT,IAAf,cAAwBI,KAAxB,cAAkCE,OAAlC,GACA,gBAAUN,IAAV,cAAmBI,KAAnB,cAA6BE,OAA7B,EACH,CARM,EASNI,KATM,CASA,SAAAC,KAAK,CAAI,CACZH,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACA,MAAO,EAAP,CACH,CAZM,CAAP,CAaH,CAlBY,CAAjB,CAqBA,cAAetB,CAAAA,QAAf","sourcesContent":["const apiKey = 'u5mrF79LEqZx7JFwOyifoKT2a3ILGvRE'; //enter your own mapquest api key\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response.json();\n}\n\nconst MapQuest = {\n    reverse(pos) { //returns name of city given latitude & longitude\n        \n        const lat = pos.coords.latitude;\n        const long = pos.coords.longitude;\n        return fetch(`https://www.mapquestapi.com/geocoding/v1/reverse?key=${apiKey}&location=${lat}%2C${long}&outFormat=json&thumbMaps=false`)\n        .then(handleErrors)\n        .then(jsonResponse => {\n            const city = jsonResponse.results[0].locations[0].adminArea5;\n            const state = jsonResponse.results[0].locations[0].adminArea3;\n            const country = jsonResponse.results[0].locations[0].adminArea1;\n            console.log(`${city}, ${state}, ${country}`);\n            return `${city}, ${state}, ${country}`;\n        })\n        .catch(error => {\n            console.log(error);\n            return {};\n        });\n    }\n}\n\nexport default MapQuest;\n"]},"metadata":{},"sourceType":"module"}