{"ast":null,"code":"import _classCallCheck from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Restaurant from'../Restaurant/Restaurant';import'./ReviewPage.css';import SmallSearchBar from'../SmallSearchBar/SmallSearchBar';import Yelp from'../../util/Yelp';import ReviewForm from'../ReviewForm/ReviewForm';import Review from'../Review/Review';var queryString=window.location.search;var urlParams=new URLSearchParams(queryString);var id=urlParams.get('id');var ReviewPage=/*#__PURE__*/function(_React$Component){_inherits(ReviewPage,_React$Component);var _super=_createSuper(ReviewPage);function ReviewPage(props){var _this;_classCallCheck(this,ReviewPage);_this=_super.call(this,props);var str=localStorage.getItem(\"new-tab-data\");if(str){console.log('foundin local storage');var res=JSON.parse(str);_this.state={restaurant:res,isLoading:false,reviews:[]};localStorage.removeItem(\"new-tab-data\");}else{_this.state={restaurant:'',isLoading:false,reviews:[]};}return _this;}_createClass(ReviewPage,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"Review-page\"},/*#__PURE__*/React.createElement(SmallSearchBar,null),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Form-display\"},/*#__PURE__*/React.createElement(ReviewForm,{restaurantId:id})),/*#__PURE__*/React.createElement(\"div\",{className:\"Restaurant-display\"},this.state.isLoading?/*#__PURE__*/React.createElement(\"h1\",null,\" Loading... \"):/*#__PURE__*/React.createElement(Restaurant,{restaurant:this.state.restaurant,hasClick:false}))),this.state.reviews.length?this.state.reviews.map(function(rev){return/*#__PURE__*/React.createElement(Review,{review:rev,key:rev.review_id});}):/*#__PURE__*/React.createElement(\"h1\",{id:\"none\"},\"Be the first to review a dish!\"));}/*\n                {this.state.reviews && this.state.reviews.map(rev => {\n                    return <Review review = {rev} key = {rev.id}/>\n                })}\n                */},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.state.restaurant===''){this.setState({isLoading:true});Yelp.searchById(id).then(function(restaurants){_this2.setState({restaurant:restaurants,isLoading:false});});}fetch(\"/review/restaurantId/\".concat(id)).then(function(res){return res.json();}).then(function(reviews){_this2.setState({reviews:reviews.reverse()});}).catch(function(error){return console.log(error);});}}]);return ReviewPage;}(React.Component);export default ReviewPage;","map":{"version":3,"sources":["/Users/danielliu/Documents/ReactProjects/food-reviewer/client/src/Components/ReviewPage/ReviewPage.js"],"names":["React","Restaurant","SmallSearchBar","Yelp","ReviewForm","Review","queryString","window","location","search","urlParams","URLSearchParams","id","get","ReviewPage","props","str","localStorage","getItem","console","log","res","JSON","parse","state","restaurant","isLoading","reviews","removeItem","length","map","rev","review_id","setState","searchById","then","restaurants","fetch","json","reverse","catch","error","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Restaurant from '../Restaurant/Restaurant';\nimport './ReviewPage.css';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nimport Yelp from '../../util/Yelp';\nimport ReviewForm from '../ReviewForm/ReviewForm';\nimport Review from '../Review/Review';  \n\nlet queryString = window.location.search;\nlet urlParams = new URLSearchParams(queryString);\nlet id = urlParams.get('id');\n\nclass ReviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n        let str = localStorage.getItem(\"new-tab-data\");\n        if(str) {\n            console.log('foundin local storage');\n            let res = JSON.parse(str);\n            this.state = {\n                restaurant: res,\n                isLoading: false,\n                reviews: []\n            }\n            localStorage.removeItem(\"new-tab-data\");\n        } else {\n            this.state = {\n                restaurant: '',\n                isLoading: false,\n                reviews: []\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className = \"Review-page\">\n                \n                <SmallSearchBar/>\n                <div className = \"row\">\n                    <div className = \"Form-display\"><ReviewForm restaurantId = {id}/></div>\n                    <div className = \"Restaurant-display\">\n                        \n                        {this.state.isLoading ? <h1> Loading... </h1> : \n                            <Restaurant restaurant = {this.state.restaurant} hasClick = {false}/>\n                        }\n                        \n                    </div>\n                    \n                </div>\n                {this.state.reviews.length ? this.state.reviews.map(rev => {\n                    return <Review review = {rev} key = {rev.review_id}/>\n                }) : <h1 id = \"none\">Be the first to review a dish!</h1>\n                }\n                \n            </div>\n        );\n    }\n/*\n                {this.state.reviews && this.state.reviews.map(rev => {\n                    return <Review review = {rev} key = {rev.id}/>\n                })}\n                */\n    componentDidMount() {\n        if(this.state.restaurant === '') {\n            this.setState({isLoading: true});\n            Yelp.searchById(id).then(restaurants => {\n                this.setState({restaurant: restaurants, isLoading: false});\n            });\n        }\n\n        fetch(`/review/restaurantId/${id}`)\n        .then(res => {\n            return res.json()\n            })\n        .then(reviews => { \n            this.setState({reviews: reviews.reverse()});\n        })\n        .catch(error => console.log(error));\n    }\n}\n\n\nexport default ReviewPage;"]},"metadata":{},"sourceType":"module"}