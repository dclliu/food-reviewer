{"ast":null,"code":"var _jsxFileName = \"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/src/Components/ReviewPage/ReviewPage.js\";\nimport React from 'react';\nimport Restaurant from '../Restaurant/Restaurant';\nimport './ReviewPage.css';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nimport Yelp from '../../util/Yelp';\nimport ReviewForm from '../ReviewForm/ReviewForm';\nimport Review from '../Review/Review';\n\nclass ReviewPage extends React.Component {\n  constructor(props) {\n    super(props);\n    let str = localStorage.getItem(\"new-tab-data\");\n\n    if (str) {\n      console.log('foundin local storage');\n      let res = JSON.parse(str);\n      this.state = {\n        restaurant: res,\n        isLoading: false,\n        reviews: []\n      };\n      localStorage.removeItem(\"new-tab-data\");\n    } else {\n      this.state = {\n        restaurant: '',\n        isLoading: false,\n        reviews: []\n      };\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    return;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Review-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SmallSearchBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Restaurant-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 49\n      }\n    }, \" Loading... \") : /*#__PURE__*/React.createElement(Restaurant, {\n      restaurant: this.state.restaurant,\n      hasClick: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Form-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ReviewForm, {\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }\n    }))), this.state.reviews && this.state.reviews.map(rev => {\n      return /*#__PURE__*/React.createElement(Review, {\n        review: rev,\n        key: rev.review_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n  /*\n                  {this.state.reviews && this.state.reviews.map(rev => {\n                      return <Review review = {rev} key = {rev.id}/>\n                  })}\n                  */\n\n\n  componentDidMount() {\n    if (this.state.restaurant === '') {\n      this.setState({\n        isLoading: true\n      });\n      let queryString = window.location.search;\n      let urlParams = new URLSearchParams(queryString);\n      let id = urlParams.get('id');\n      Yelp.searchById(id).then(restaurants => {\n        this.setState({\n          restaurant: restaurants,\n          isLoading: false\n        });\n      });\n    }\n\n    fetch('/review').then(res => {\n      console.log(res);\n      return res.json();\n    }).then(reviews => {\n      console.log(reviews);\n      this.setState({\n        reviews: reviews\n      });\n    }).then(() => {\n      console.log(this.state.reviews);\n    }).catch(error => console.log(error));\n  }\n\n}\n\nexport default ReviewPage;","map":{"version":3,"sources":["/Users/danielliu/Documents/ReactProjects/food-reviewer/client/src/Components/ReviewPage/ReviewPage.js"],"names":["React","Restaurant","SmallSearchBar","Yelp","ReviewForm","Review","ReviewPage","Component","constructor","props","str","localStorage","getItem","console","log","res","JSON","parse","state","restaurant","isLoading","reviews","removeItem","handleSubmit","bind","e","render","map","rev","review_id","componentDidMount","setState","queryString","window","location","search","urlParams","URLSearchParams","id","get","searchById","then","restaurants","fetch","json","catch","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Restaurant from '../Restaurant/Restaurant';\nimport './ReviewPage.css';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\nimport Yelp from '../../util/Yelp';\nimport ReviewForm from '../ReviewForm/ReviewForm';\nimport Review from '../Review/Review';  \n\nclass ReviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n        let str = localStorage.getItem(\"new-tab-data\");\n        if(str) {\n            console.log('foundin local storage');\n            let res = JSON.parse(str);\n            this.state = {\n                restaurant: res,\n                isLoading: false,\n                reviews: []\n            }\n            localStorage.removeItem(\"new-tab-data\");\n        } else {\n            this.state = {\n                restaurant: '',\n                isLoading: false,\n                reviews: []\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit(e) {\n        return;\n    }\n    render() {\n        return (\n            <div className = \"Review-page\">\n                \n                <SmallSearchBar/>\n                <div className = \"row\">\n                    <div className = \"Restaurant-display\">\n                    \n                        {this.state.isLoading ? <h1> Loading... </h1> : \n                            <Restaurant restaurant = {this.state.restaurant} hasClick = {false}/>\n                        }\n                        \n                    </div>\n                    <div className = \"Form-display\"><ReviewForm handleSubmit = {this.handleSubmit}/></div>\n                </div>\n\n                {this.state.reviews && this.state.reviews.map(rev => {\n                    return <Review review = {rev} key = {rev.review_id}/>\n                })}\n                \n            </div>\n        );\n    }\n/*\n                {this.state.reviews && this.state.reviews.map(rev => {\n                    return <Review review = {rev} key = {rev.id}/>\n                })}\n                */\n    componentDidMount() {\n        if(this.state.restaurant === '') {\n            this.setState({isLoading: true});\n            let queryString = window.location.search;\n            let urlParams = new URLSearchParams(queryString);\n            let id = urlParams.get('id');\n            Yelp.searchById(id).then(restaurants => {\n                this.setState({restaurant: restaurants, isLoading: false});\n            });\n        }\n\n        fetch('/review')\n        .then(res => {\n            console.log(res);\n            return res.json()\n            })\n        .then(reviews => { \n            console.log(reviews); \n            this.setState({reviews: reviews});\n        }).then(() => {\n            console.log(this.state.reviews);\n        }).catch(error => console.log(error));\n            \n        \n    }\n    \n}\n\n\nexport default ReviewPage;"]},"metadata":{},"sourceType":"module"}