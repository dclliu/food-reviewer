{"ast":null,"code":"import _classCallCheck from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/danielliu/Documents/ReactProjects/food-reviewer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./SearchResults.css';import RestaurantList from'../RestaurantList/RestaurantList';import Yelp from'../../util/Yelp';import SmallSearchBar from'../SmallSearchBar/SmallSearchBar';var temporaryRestaurant={id:'temporary',imageUrl:'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',name:'Restaurant Name',address1:'Restaurant St Address',city:'Restaurant City',state:'Restaurant State',zipCode:'Restaurant Zip Code',category:'Restaurant Category',rating:5.0,reviewCount:100};var queryString=window.location.search;var urlParams=new URLSearchParams(queryString);var term=urlParams.get('term');var location=urlParams.get('location');var SearchResults=/*#__PURE__*/function(_React$Component){_inherits(SearchResults,_React$Component);var _super=_createSuper(SearchResults);function SearchResults(props){var _this;_classCallCheck(this,SearchResults);_this=_super.call(this,props);_this.state={restaurants:[],isLoading:false};_this.searchYelp=_this.searchYelp.bind(_assertThisInitialized(_this));return _this;}_createClass(SearchResults,[{key:\"searchYelp\",value:function searchYelp(term,location){var _this2=this;Yelp.search(term,location).then(function(restaurants){_this2.setState({restaurants:restaurants});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"Search-results\"},/*#__PURE__*/React.createElement(SmallSearchBar,null),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},!this.state.isLoading?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{id:\"Header\"},\" Top results in \",location,\":\"),/*#__PURE__*/React.createElement(RestaurantList,{restaurants:this.state.restaurants})):/*#__PURE__*/React.createElement(\"h1\",null,\" Loading... \")));}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;this.setState({isLoading:true});Yelp.search(term,location).then(function(restaurants){_this3.setState({restaurants:restaurants,isLoading:false});});/*\n        cancelablePromise.then(restaurants => {\n            this.setState({restaurants: restaurants, isLoading: false});\n        });\n        */}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){/*\n        cancelablePromise.cancel();\n        */}}]);return SearchResults;}(React.Component);/*\nconst makeCancelable = (promise) => {\n    let hasCanceled_ = false;\n\n    const wrappedPromise = new Promise((resolve, reject) => {\n        promise.then(\n            val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n            error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n        );\n    });\n\n    return {\n        promise: wrappedPromise,\n        cancel() {\n            hasCanceled_ = true;\n        },\n    };\n};\n\nlet queryString = window.location.search;\nlet urlParams = new URLSearchParams(queryString);\nlet term = urlParams.get('term');\nlet location = urlParams.get('location');\n\nconst cancelablePromise = makeCancelable(Yelp.search(term, location));\n*/export default SearchResults;","map":{"version":3,"sources":["/Users/danielliu/Documents/ReactProjects/food-reviewer/client/src/Components/SearchResults/SearchResults.js"],"names":["React","RestaurantList","Yelp","SmallSearchBar","temporaryRestaurant","id","imageUrl","name","address1","city","state","zipCode","category","rating","reviewCount","queryString","window","location","search","urlParams","URLSearchParams","term","get","SearchResults","props","restaurants","isLoading","searchYelp","bind","then","setState","Component"],"mappings":"o4BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CAEA,GAAMC,CAAAA,mBAAmB,CACrB,CACAC,EAAE,CAAE,WADJ,CAEAC,QAAQ,CAAE,+EAFV,CAGAC,IAAI,CAAE,iBAHN,CAIAC,QAAQ,CAAE,uBAJV,CAKAC,IAAI,CAAE,iBALN,CAMAC,KAAK,CAAE,kBANP,CAOAC,OAAO,CAAE,qBAPT,CAQAC,QAAQ,CAAE,qBARV,CASAC,MAAM,CAAE,GATR,CAUAC,WAAW,CAAE,GAVb,CADJ,CAaI,GAAIC,CAAAA,WAAW,CAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CACI,GAAIC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoBL,WAApB,CAAhB,CACA,GAAIM,CAAAA,IAAI,CAAGF,SAAS,CAACG,GAAV,CAAc,MAAd,CAAX,CACA,GAAIL,CAAAA,QAAQ,CAAGE,SAAS,CAACG,GAAV,CAAc,UAAd,CAAf,C,GAGFC,CAAAA,a,0HAEF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EAGA,MAAKd,KAAL,CAAa,CACTe,WAAW,CAAE,EADJ,CAETC,SAAS,CAAE,KAFF,CAAb,CAIA,MAAKC,UAAL,CAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB,CARe,aASlB,C,wEAEUP,I,CAAMJ,Q,CAAU,iBACvBf,IAAI,CAACgB,MAAL,CAAYG,IAAZ,CAAkBJ,QAAlB,EAA4BY,IAA5B,CAAiC,SAAAJ,WAAW,CAAI,CAC5C,MAAI,CAACK,QAAL,CAAc,CAACL,WAAW,CAAEA,WAAd,CAAd,EACH,CAFD,EAGH,C,uCACQ,CACL,mBACI,2BAAK,SAAS,CAAG,gBAAjB,eACI,oBAAC,cAAD,MADJ,cAGI,2BAAK,SAAS,CAAG,SAAjB,EACK,CAAC,KAAKf,KAAL,CAAWgB,SAAZ,cACD,4CACI,0BAAI,EAAE,CAAG,QAAT,qBAAmCT,QAAnC,KADJ,cAEI,oBAAC,cAAD,EAAgB,WAAW,CAAI,KAAKP,KAAL,CAAWe,WAA1C,EAFJ,CADC,cAIK,6CALV,CAHJ,CADJ,CAaH,C,6DAEmB,iBAChB,KAAKK,QAAL,CAAc,CAACJ,SAAS,CAAE,IAAZ,CAAd,EACAxB,IAAI,CAACgB,MAAL,CAAYG,IAAZ,CAAkBJ,QAAlB,EAA4BY,IAA5B,CAAiC,SAAAJ,WAAW,CAAI,CAC5C,MAAI,CAACK,QAAL,CAAc,CAACL,WAAW,CAAEA,WAAd,CAA2BC,SAAS,CAAE,KAAtC,CAAd,EACH,CAFD,EAGA;;;;UAKH,C,mEACsB,CACnB;;UAGH,C,2BAjDuB1B,KAAK,CAAC+B,S,EAqDlC;;;;;;;;;;;;;;;;;;;;;;;;;EA0BA,cAAeR,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport './SearchResults.css';\nimport RestaurantList from '../RestaurantList/RestaurantList';\nimport Yelp from '../../util/Yelp';\nimport SmallSearchBar from '../SmallSearchBar/SmallSearchBar';\n\nconst temporaryRestaurant = \n    {\n    id: 'temporary',\n    imageUrl: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\n    name: 'Restaurant Name',\n    address1: 'Restaurant St Address',\n    city: 'Restaurant City',\n    state: 'Restaurant State',\n    zipCode: 'Restaurant Zip Code',\n    category: 'Restaurant Category',\n    rating: 5.0,\n    reviewCount: 100};\n\n    let queryString = window.location.search;\n        let urlParams = new URLSearchParams(queryString);\n        let term = urlParams.get('term');\n        let location = urlParams.get('location');\n\n\nclass SearchResults extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n\n        this.state = {\n            restaurants: [],\n            isLoading: false\n        };\n        this.searchYelp = this.searchYelp.bind(this);\n    }\n\n    searchYelp(term, location) {\n        Yelp.search(term, location).then(restaurants => {\n            this.setState({restaurants: restaurants});\n        });\n    }\n    render() {\n        return (\n            <div className = \"Search-results\">\n                <SmallSearchBar/>\n                \n                <div className = \"content\">\n                    {!this.state.isLoading ? \n                    <div>\n                        <h1 id = \"Header\"> Top results in {location}:</h1>\n                        <RestaurantList restaurants = {this.state.restaurants}/></div>\n                        : <h1> Loading... </h1>}\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n        Yelp.search(term, location).then(restaurants => {\n            this.setState({restaurants: restaurants, isLoading: false});\n        });\n        /*\n        cancelablePromise.then(restaurants => {\n            this.setState({restaurants: restaurants, isLoading: false});\n        });\n        */\n    }\n    componentWillUnmount() {\n        /*\n        cancelablePromise.cancel();\n        */\n    }\n}\n\n\n/*\nconst makeCancelable = (promise) => {\n    let hasCanceled_ = false;\n\n    const wrappedPromise = new Promise((resolve, reject) => {\n        promise.then(\n            val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n            error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n        );\n    });\n\n    return {\n        promise: wrappedPromise,\n        cancel() {\n            hasCanceled_ = true;\n        },\n    };\n};\n\nlet queryString = window.location.search;\nlet urlParams = new URLSearchParams(queryString);\nlet term = urlParams.get('term');\nlet location = urlParams.get('location');\n\nconst cancelablePromise = makeCancelable(Yelp.search(term, location));\n*/\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}